$(".number-tab-steps").steps( {
  headerTag:"h6", bodyTag:"fieldset", transitionEffect:"fade", titleTemplate:'<span class="step">#index#</span> #title#', labels: {
    finish: "Submit"
  }
  , onFinished:function(e, t) {
    alert("Form submitted.")
  }
}

),
$(".icons-tab-steps").steps( {
  headerTag:"h6", bodyTag:"fieldset", transitionEffect:"fade", titleTemplate:'<span class="step">#index#</span> #title#', labels: {
    finish: "Submit"
  }
  , onFinished:function(e, t) {
    alert("Form submitted.")
  }
}

),
$(".vertical-tab-steps").steps( {
  headerTag:"h6", bodyTag:"fieldset", transitionEffect:"fade", stepsOrientation:"vertical", titleTemplate:'<span class="step">#index#</span> #title#', labels: {
    finish: "Submit"
  }
  , onFinished:function(e, t) {
    alert("Form submitted.")
  }
}

);

var form=$(".steps-validation").show();
var resulInsert=false;
var interval;
var responseData=0;



function bloquearSidebar(){
 $('.sidebar-large').block({
  message: '<div class="ft-refresh-cw icon-spin font-medium-2"></div>',       
  overlayCSS: {
    backgroundColor: '#fff',
    opacity: 0.8,
    cursor: 'wait'
  },
  css: {
    border: 0,
    padding: 0,
    backgroundColor: 'transparent'
  }
}); 
}

// function getValueBtc_2(price_usd){
//   $.get('https://bitpay.com/api/rates/BTC/USD')
//   .done(function( data ) {    
//     var val = parseInt(price_usd)/parseInt(data.rate);
//     val=val.toFixed(6);
//     $('#amount_pay_btc').text(val);
//   });
// }

function userInser(){

  $.ajax({
    type:'POST',   
    dataType:'json',      
    url:'/register',
    data: $("#formRegister").serialize(),
    headers: {'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')},
    beforeSend: function(x){

    },
    success:function(data){
      responseData=data;
      if(data.status==200){     
        $("#amount_pay").text(data.price);      
        // getValueBtc_2(data.price);
        $(".steps-validation").steps("next"); 
      }
    }
  });

}
var step=$(".steps-validation");
step.steps( {
  headerTag:"h6", bodyTag:"fieldset", enablePagination: true, transitionEffect:"fade", titleTemplate:'<span class="step">#index#</span> #title#',   enableFinishButton: false,  labels: {
    finish: "Submit"
  }, onStepChanging:function(e, t, i) { 
    swAjax=false;
    var sw=true;

    if(userRegistrado_1_4==false){

      if(i==2){
        checkSponsor(); 
        if(!approvedSaveSponsor){
          sw=false;
        }   
        checkUsername(); 
        if(!approvedusername){
          sw=false;
        }     
      }else if(i==1){
        checkUEmail();
        if(!approvedEmail){
          sw=false;
        } 

      }else if(i==3){     
        if(idpackage==''){
          $('.error-packages').show();
          sw=false;
        }else{       

         if ($('#input-11').is(':checked') ) { 
           $('.icheckbox_square-green #aceptar-error').hide(); 
           sw=false;
           $('.sidebar-large').block({
            message: '<div class="ft-refresh-cw icon-spin font-medium-2"></div>',       
            overlayCSS: {
              backgroundColor: '#fff',
              opacity: 0.8,
              cursor: 'wait'
            },
            css: {
              border: 0,
              padding: 0,
              backgroundColor: 'transparent'
            }
          }); 

           if(responseData.status==200){     
            responseData=0;    
            $('.sidebar-large').unblock();

            return  true;
          }else if(responseData.status==422){

           $.each(responseData.errors, function( index, value ) {             

            toastr.error(value, MaysPrimera(index), {  timeOut: 5e3});
          });
           responseData=0;
           $('.sidebar-large').unblock();
           return  false;
         }
         userInser();

       }
     }        
   }
 }
 if(sw){        
  return t>i||!(3===i&&Number($("#age-2").val())<18)&&(t<i&&(form.find(".body:eq("+i+") label.error").remove(), form.find(".body:eq("+i+") .error").removeClass("error")), form.validate().settings.ignore=":disabled,:hidden", form.valid())
}
}
,onStepChanged: function (event, currentIndex, priorIndex) {

  if(currentIndex==3){
    $('#formRegister .actions').hide(); 
    step.steps({
      enablePagination: false,
    });
  }else if(currentIndex==2 && contadoraFor==6){
   step.steps({
    enablePagination: false,
  });
 }
}, onFinishing:function(e, t) {

  return form.validate().settings.ignore=":disabled", form.valid()
}
, onFinished:function(e, t) {

}
}

),

$(".steps-validation").validate( {
  ignore:"input[type=hidden]", errorClass:"danger", successClass:"success", highlight:function(e, t) {
    $(e).removeClass(t)
  },submitHandler: function(form) {
   var formData = new FormData($("#formRegister")[0]);
   $.ajax({
    type:'POST',   
    dataType:'json',      
    url:'/payment/create',
    data: formData,
    contentType: false,
    processData: false,
    headers: {'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')},
    beforeSend: function(x){                
      bloquearSidebar();          
    },
    success:function(data){                 
      if(data.status==422){
        $.each(data.errors, function( index, value ) {                          
          toastr.error(value);
        });     
        swal.close();
        $('.sidebar-large').unblock();
        return  false;
      }else if(data.status==423){             
        toastr.error(data.errors.title);
        swal.close();
        $('.sidebar-large').unblock();
        return  false;
      }else if(data.status==200){
        $('.sidebar-large').unblock();                           
        swal(data.success.title, data.success.menssage, "success");
        setTimeout(function(){  location.reload(); }, 3000);
      }

    }
  });


 }
 , unhighlight:function(e, t) {
  $(e).removeClass(t)
}
, errorPlacement:function(e, t) {
  e.insertAfter(t)
}
, rules: {
 'email': { required: true, email: true },
 'password': { required: true, minlength: 6 },
 'password_confirmation': { required: '#password', minlength: 6, equalTo: "#password" }
}, 
messages: {    
 'password': { required: 'Debe ingresar el password', minlength: 'El password debe tener mínimo 6 caracteres' },
 'password_confirmation': { required: 'Debe ingresar la contraseña', minlength: 'La contraseña debe tener mínimo 6 caracteres', equalTo: 'Debe ingresar la misma constraseña' }
},
}

),
$(".datetime").daterangepicker( {
  timePicker:!0, timePickerIncrement:30, locale: {
    format: "MM/DD/YYYY h:mm A"
  }
}

);


function MaysPrimera(string){
  return string.charAt(0).toUpperCase() + string.slice(1);
}

